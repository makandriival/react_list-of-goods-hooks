{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReserved","NONE","sortType","setSortType","goods","visibleGoods","LENGTH","sort","a","b","length","ALPHABET","localeCompare","Error","reverse","console","log","getReorderedGoods","sortAphabetClassName","classNames","sortLengthClassName","reverseClassName","resetClassName","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBMC,EArDD,SACLA,EADK,GAGJ,IADCF,EACF,EADEA,SAAUH,EACZ,EADYA,WAENM,EAAY,YAAOD,GAEzB,OAAQF,GACN,KAAKP,EAASW,OACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UACzC,MAEF,KAAKf,EAASgB,SACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,cAAcH,MAC5C,MAEF,KAAKd,EAASM,KACZ,MAEF,QACE,MAAM,IAAIY,MAAM,wBAUpB,OAPId,GACFM,EAAaS,UAIfC,QAAQC,IAAId,EAAUH,GAEfM,EAwBOY,CAAkBrB,EAAiB,CAC/CM,WACAH,eAGImB,EAAuBC,IAAW,iBAAkB,CACxD,WAAYjB,IAAaP,EAASgB,WAG9BS,EAAsBD,IAAW,oBAAqB,CAC1D,WAAYjB,IAAaP,EAASW,SAG9Be,EAAmBF,IACvB,oBACA,CAAE,YAAapB,IAGXuB,EAAiBH,IACrB,4BACA,CACE,YACAvB,EAAgB,KAAOQ,EAAM,KAIjC,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWL,EACXO,QAjDe,WACrBtB,EAAYR,EAASgB,WA6CjB,iCAQA,wBACEa,KAAK,SACLD,UAAWH,EACXK,QArDa,WACnBtB,EAAYR,EAASW,SAiDjB,4BAQA,wBACEkB,KAAK,SACLD,UAAWF,EACXI,QAzDc,WACpBzB,GAAeD,IAqDX,qBAQA,wBACEyB,KAAK,SACLD,UAAWD,EACXG,QA7DM,WACZzB,GAAc,GACdG,EAAYR,EAASM,OAwDjB,sBASF,6BACE,6BACGG,EAAMsB,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,cChJrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1f55f391.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case SortType.NONE:\n      break;\n\n    default:\n      throw new Error('something went wrong');\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReserved] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const toggleReverse = () => {\n    setIsReserved(!isReversed);\n  };\n\n  const reset = () => {\n    setIsReserved(false);\n    setSortType(SortType.NONE);\n  };\n\n  const goods = getReorderedGoods(goodsFromServer, {\n    sortType,\n    isReversed,\n  });\n\n  const sortAphabetClassName = classNames('button is-info', {\n    'is-light': sortType !== SortType.ALPHABET,\n  });\n\n  const sortLengthClassName = classNames('button is-success', {\n    'is-light': sortType !== SortType.LENGTH,\n  });\n\n  const reverseClassName = classNames(\n    'button is-warning',\n    { 'is-light': !isReversed },\n  );\n\n  const resetClassName = classNames(\n    'button is-danger is-light',\n    {\n      'is-hidden':\n      goodsFromServer[1] === goods[1],\n    },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={sortAphabetClassName}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={sortLengthClassName}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={reverseClassName}\n          onClick={toggleReverse}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className={resetClassName}\n          onClick={reset}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}